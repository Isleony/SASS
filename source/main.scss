@use 'config/reset';
@use 'config/variaveis.scss';
@use 'sass:math';

@mixin elementoForm($margin: 16px) {
    padding: 8px;
    display: block;
    width: 100%;
    margin-bottom: $margin;
}


@function pixelParaEm($alvoEmPixel, $contextoEmPixel: 16px) {
    @return math.div($alvoEmPixel, $contextoEmPixel)+em;
}


body {
    background-color: #eee;
}

.container {
    max-width: 1024px;
    width: 100%;
    margin: 0;
}

header {
    padding: 16px 0;
    background-color: variaveis.$corPrincipal;
    text-align: center;
    color: #fff;
}

.form-container {
    /* Altura do contêiner igual a 100% da altura da janela menos 70 pixels */
    height: calc(100vh - 70px);

    /* Exibição flexível para alinhamento vertical e horizontal */
    display: flex;

    /* Direção da coluna para empilhar os elementos verticalmente */
    flex-direction: column;

    /* Alinhamento central vertical */
    align-items: center;

    /* Alinhamento central horizontal */
    justify-content: center;

    max-width: 760px;

    h2 {
        font-size: pixelParaEm (48px);
        text-align: center;
    }


    form {
        width: 100%;
        max-width: 480px;
        margin-top: 40px;

    }

    label {
        font-weight: bold;
        cursor: pointer;
    }

    input {
        @include elementoForm();
        background-color: transparent;
        border: none;
        border-bottom: 3px solid variaveis.$corPrincipal;
    }

    button {
        @include elementoForm();
        background-color: variaveis.$corSecundaria;
        border: none;
        font-size: 18px;
        font-weight: bold;
        color: red($color: #000000);

        &:hover {
            background-color: darken(variaveis.$corSecundaria, 15%);
        }
    }
}


@media screen and (max-width: variaveis.$mobile) {
    body {
        .container {
            max-width: 80%;
        }
    }
}